import{r as e,o as l,c as t,a as n,w as a,F as i,b as s}from"./app.9c75e1c0.js";import{_ as r,a as o}from"./pci0.3fd67303.js";const u={},h=n("h1",{id:"fixing-nvram-manual",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fixing-nvram-manual","aria-hidden":"true"},"#"),s(" Fixing NVRAM: Manual")],-1),d={class:"table-of-contents"},p=s("# Finding the ACPI path"),c=s("# Edits to the sample SSDT"),m=s("# Compiling the SSDT"),g=s("# Wrapping up"),f=n("h2",{id:"finding-the-acpi-path",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#finding-the-acpi-path","aria-hidden":"true"},"#"),s(" Finding the ACPI path")],-1),S=s("Finding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from "),b=s("Dumping the DSDT"),x=s(" and "),C=s("Decompiling and Compiling"),P=s(" with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an "),w={href:"https://marketplace.visualstudio.com/items?itemName=Thog.vscode-asl",target:"_blank",rel:"noopener noreferrer"},D=s("ACPI extension"),y=s(" that can also help)."),_=n("p",null,"Next, search for the following:",-1),T=n("ul",null,[n("li",null,[s("Finding the LowPinCount path: "),n("ul",null,[n("li",null,[s("Search "),n("code",null,"Name (_ADR, 0x001F0000)")])])]),n("li",null,[s("Finding the PCI path: "),n("ul",null,[n("li",null,[s("Search "),n("code",null,"PNP0A08"),s(" (If multiple show up, use the first one)")])])])],-1),I=n("p",null,"You should get something like the following show up:",-1),v=n("table",null,[n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"center"}},"LPC Pathing"),n("th",{style:{"text-align":"center"}},"PCI Pathing")])]),n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"center"}},[n("img",{src:r,alt:""})]),n("td",{style:{"text-align":"center"}},[n("img",{src:o,alt:""})])])])],-1),L=n("p",null,[s("Now with the pathing, you can head here: "),n("a",{href:"#edits-to-the-sample-ssdt"},"Edits to the sample SSDT")],-1),k=n("h2",{id:"edits-to-the-sample-ssdt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#edits-to-the-sample-ssdt","aria-hidden":"true"},"#"),s(" Edits to the sample SSDT")],-1),A=n("p",null,"Now that we have our ACPI path, lets grab our SSDT and get to work:",-1),F={href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-PMC.dsl",target:"_blank",rel:"noopener noreferrer"},B=s("SSDT-PMC.dsl"),N=n("p",null,[s("By default, this uses "),n("code",null,"PCI0.LPCB"),s(" for the pathing. you'll want to rename accordingly.")],-1),R=n("p",null,[s("Following the example from above, we'll be renaming it to "),n("code",null,"PCI0.LPC"),s(":")],-1),O=n("p",null,[n("strong",null,"Before"),s(":")],-1),E=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,"External (_SB_.PCI0.LPCB, DeviceObj) <- Rename this\n\nScope (_SB.PCI0.LPCB) <- Rename this\n")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),M=n("p",null,[n("img",{src:"/assets/ssdt-before.e274d9f3.png",alt:""})],-1),j=n("p",null,"Following the example pathing we found, the SSDT should look something like this:",-1),W=n("p",null,[n("strong",null,"After"),s(":")],-1),V=n("div",{class:"language-text ext-text line-numbers-mode"},[n("pre",{class:"language-text"},[n("code",null,"External (_SB_.PCI0.LPC, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC) <- Renamed\n")]),n("div",{class:"line-numbers"},[n("span",{class:"line-number"},"1"),n("br"),n("span",{class:"line-number"},"2"),n("br"),n("span",{class:"line-number"},"3"),n("br")])],-1),q=n("p",null,[n("img",{src:"/assets/ssdt-after.1b756b7b.png",alt:""})],-1),Y=n("h2",{id:"compiling-the-ssdt",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#compiling-the-ssdt","aria-hidden":"true"},"#"),s(" Compiling the SSDT")],-1),z=s("With the SSDT done, you're now "),G=s("ready to compile the SSDT!"),H=n("h2",{id:"wrapping-up",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wrapping-up","aria-hidden":"true"},"#"),s(" Wrapping up")],-1),J=n("p",null,"Once you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:",-1),K=n("strong",null,"Cleanup",-1);u.render=function(s,r){const o=e("RouterLink"),u=e("OutboundLink");return l(),t(i,null,[h,n("nav",d,[n("ul",null,[n("li",null,[n(o,{to:"#finding-the-acpi-path"},{default:a((()=>[p])),_:1})]),n("li",null,[n(o,{to:"#edits-to-the-sample-ssdt"},{default:a((()=>[c])),_:1})]),n("li",null,[n(o,{to:"#compiling-the-ssdt"},{default:a((()=>[m])),_:1})]),n("li",null,[n(o,{to:"#wrapping-up"},{default:a((()=>[g])),_:1})])])]),f,n("p",null,[S,n(o,{to:"/dump.html"},{default:a((()=>[b])),_:1}),x,n(o,{to:"/compile.html"},{default:a((()=>[C])),_:1}),P,n("a",w,[D,n(u)]),y]),_,T,I,v,L,k,A,n("ul",null,[n("li",null,[n("a",F,[B,n(u)])])]),N,R,O,E,M,j,W,V,q,Y,n("p",null,[z,n(o,{to:"/compile.html"},{default:a((()=>[G])),_:1})]),H,J,n("ul",null,[n("li",null,[n(o,{to:"/cleanup.html"},{default:a((()=>[K])),_:1})])])],64)};export default u;
