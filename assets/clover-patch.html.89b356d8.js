import{r as e,o as t,c as l,a as i,F as a,d as n,b as r}from"./app.9c75e1c0.js";const o={},d=n('<h1 id="conversione-delle-patch-comuni-di-kernel-e-kext" tabindex="-1"><a class="header-anchor" href="#conversione-delle-patch-comuni-di-kernel-e-kext" aria-hidden="true">#</a> Conversione delle patch comuni di Kernel e Kext</h1><h2 id="convertire-una-patch-manuale" tabindex="-1"><a class="header-anchor" href="#convertire-una-patch-manuale" aria-hidden="true">#</a> Convertire una patch manuale</h2><p>Quando converti una patch del kernel/kext in una per OpenCore, devi ricordare due cose</p><ul><li><code>InfoPlistPatch</code> non ha una funzione in questo caso</li><li><code>MatchOS</code> è sostituito con <code>MinKernel</code> e <code>MaxKernel</code></li><li>Sia le patch del kernel che kext vanno in <code>Kernel -&gt; Patch</code>, usa un <code>Identifier</code> per dire che cosa stai patchando</li></ul><p>Ora vediamo un esempio:</p><p><strong>KernelToPatch</strong>:</p><table><thead><tr><th style="text-align:left;">Key</th><th style="text-align:left;">Type</th><th style="text-align:left;">Value</th></tr></thead><tbody><tr><td style="text-align:left;">Comment</td><td style="text-align:left;">String</td><td style="text-align:left;">cpuid_set_cpufamily - force CPUFAMILY_INTEL_PENRYN</td></tr><tr><td style="text-align:left;">Disabled</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">False</td></tr><tr><td style="text-align:left;">MatchBuild</td><td style="text-align:left;">String</td><td style="text-align:left;">18G95,18G103</td></tr><tr><td style="text-align:left;">MatchOS</td><td style="text-align:left;">String</td><td style="text-align:left;">10.14.6</td></tr><tr><td style="text-align:left;">Find</td><td style="text-align:left;">Data</td><td style="text-align:left;"><code>31db803d4869980006755c</code></td></tr><tr><td style="text-align:left;">Replace</td><td style="text-align:left;">Data</td><td style="text-align:left;"><code>bbbc4fea78e95d00000090</code></td></tr></tbody></table><p>Per convertire questa patch, vedi sotto:</p><ul><li><code>Comment</code>: Disponibile sia per Clover che per OpenCore</li><li><code>Disabled</code>: OpenCore usa invece <code>Enabled</code></li><li><code>MatchBuild</code>: OpenCore usa <code>MinKernel</code> e <code>MaxKernel</code>, vedi sotto per maggiori informazioni</li><li><code>MatchOS</code>: OpenCore usa <code>MinKernel</code> e <code>MaxKernel</code>, vedi sotto per maggiori informazioni</li><li><code>Find</code>: Disponibile sia per Clover che per OpenCore</li><li><code>Replace</code>: Disponibile sia per Clover che per OpenCore</li><li><code>MaskFind</code>: OpenCore usa invece <code>Mask</code></li><li><code>MaskReplace</code>: Disponibile sia per Clover che per OpenCore</li></ul><p>Perciò la patch diventerebbe:</p><p><strong>Kernel -&gt; Patch</strong>:</p><table><thead><tr><th style="text-align:left;">Key</th><th style="text-align:left;">Type</th><th style="text-align:left;">Value</th></tr></thead><tbody><tr><td style="text-align:left;">Comment</td><td style="text-align:left;">String</td><td style="text-align:left;">cpuid_set_cpufamily - force CPUFAMILY_INTEL_PENRYN</td></tr><tr><td style="text-align:left;">Enabled</td><td style="text-align:left;">Boolean</td><td style="text-align:left;">True</td></tr><tr><td style="text-align:left;">MinKernel</td><td style="text-align:left;">String</td><td style="text-align:left;">18.7.0</td></tr><tr><td style="text-align:left;">MaxKernel</td><td style="text-align:left;">String</td><td style="text-align:left;">18.7.0</td></tr><tr><td style="text-align:left;">Find</td><td style="text-align:left;">Data</td><td style="text-align:left;"><code>31db803d4869980006755c</code></td></tr><tr><td style="text-align:left;">Replace</td><td style="text-align:left;">Data</td><td style="text-align:left;"><code>bbbc4fea78e95d00000090</code></td></tr><tr><td style="text-align:left;">Identifier</td><td style="text-align:left;">String</td><td style="text-align:left;">kernel</td></tr><tr><td style="text-align:left;">Limit</td><td style="text-align:left;">Number</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">Count</td><td style="text-align:left;">Number</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">Skip</td><td style="text-align:left;">Number</td><td style="text-align:left;">0</td></tr><tr><td style="text-align:left;">Mask</td><td style="text-align:left;">Data</td><td style="text-align:left;"></td></tr><tr><td style="text-align:left;">ReplaceMask</td><td style="text-align:left;">Data</td><td style="text-align:left;"></td></tr></tbody></table><p>Per Min e MaxKernel, possiamo usare le informazioni sotto per informarci, perciò 18G95 ha la versione del kernel <code>18.7.0</code> e 18G103 ha <code>18.7.0</code> (entrambe hanno lo stesso kernel):</p>',13),c={href:"https://it.wikipedia.org/wiki/MacOS_Mojave#Pubblicazione",target:"_blank",rel:"noopener noreferrer"},s=r("macOS Mojave: Pubblicazioni"),p=n('<p>Per il campo Identifier, devi definire <code>kernel</code> o il kext che vuoi modificare (come <code>com.apple.iokit.IOGraphicsFamily</code> )</p><p>Riguardo Limit, Count e Skip, sono impostate su <code>0</code> perciò sono applicate in ogni istanza. <code>Mask</code> e <code>ReplaceMask</code> possono essere lasciate in bianco perché Clover non supporta il masking (se non di recentissimo ma non verrà spiegato).</p><h2 id="patch-comuni-in-opencore-co" tabindex="-1"><a class="header-anchor" href="#patch-comuni-in-opencore-co" aria-hidden="true">#</a> Patch comuni in OpenCore &amp; Co</h2>',3),h=r("Piccola sezione in cui menzioniamo le patch comuni che sono state assorbite in OpenCore o in altri kext. Questa lista non è completa e perciò molti di queste possono essere state dimenticate o segnalate aprendo una nuova "),u={href:"https://github.com/khronokernel/OpenCore-Vanilla-Desktop-Guide/issues",target:"_blank",rel:"noopener noreferrer"},g=r("issue"),f=r(". Ogni aiuto sarà apprezzato"),x=i("h3",{id:"patch-del-kernel",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#patch-del-kernel","aria-hidden":"true"},"#"),r(" Patch del Kernel")],-1),m=r("Per una lista completa delle patch che OpenCore supporta, vedi "),y={href:"https://github.com/acidanthera/OpenCorePkg/blob/master/Library/OcAppleKernelLib/CommonPatches.c",target:"_blank",rel:"noopener noreferrer"},b=r("/Library/OcAppleKernelLib/CommonPatches.c"),k=n('<p><strong>Patch Generali</strong>:</p><ul><li><code>MSR 0xE2 _xcpm_idle instant reboot</code> (c) Pike R. Alpha <ul><li><code>Kernel -&gt; Quirks -&gt; AppleXcpmCfgLock</code></li></ul></li></ul><p><strong>Patch specifiche per HEDT</strong>:</p><p>Tutte le seguenti patch sono dentro <code>Kernel -&gt; Quirk -&gt; AppleXcpmExtraMsrs</code></p><ul><li><code>_xcpm_bootstrap</code> © Pike R. Alpha</li><li><code>xcpm_pkg_scope_msrs</code> © Pike R. Alpha</li><li><code>_xcpm_SMT_scope_msrs</code> 1 © Pike R. Alpha</li><li><code>_xcpm_SMT_scope_msrs</code> #2 (c) Pike R. Alpha</li><li><code>_xcpm_core_scope_msrs</code> © Pike R. Alpha</li><li><code>_xcpm_ performance_patch</code> © Pike R. Alpha</li><li>xcpm MSR Patch 1 and 2 @Pike R. Alpha</li><li><code>/0x82D390/MSR_PP0_POLICY 0x63a xcpm support</code> patch 1 e 2 Pike R. Alpha</li></ul><h3 id="patch-ai-kext" tabindex="-1"><a class="header-anchor" href="#patch-ai-kext" aria-hidden="true">#</a> Patch ai Kext</h3>',6),P=n("<li>Disabilita il logging dei Kext durante un Panic <ul><li><code>Kernel -&gt; Quirks -&gt; PanicNoKextDump</code></li></ul></li><li>AppleAHCIPort External Icon Patch1 <ul><li><code>Kernel -&gt; Quirks -&gt; ExternalDiskIcons</code></li></ul></li><li>Abilitare Trim su SSD <ul><li><code>Kernel -&gt; Quirks -&gt; ThirdPartyDrives</code></li></ul></li><li>Patch dei Limiti delle Porte USB <ul><li><code>Kernel -&gt; Quirks -&gt; XhciPortLimit</code></li></ul></li>",4),_=r("Patch di DP/HDMI FredWst "),C={href:"https://github.com/acidanthera/AppleALC/releases",target:"_blank",rel:"noopener noreferrer"},M=r("AppleALC"),v=r(" + "),K={href:"https://github.com/acidanthera/whatevergreen/releases",target:"_blank",rel:"noopener noreferrer"},A=r("WhateverGreen"),O=i("li",null,[r("Patch del IOPCIFamily "),i("ul",null,[i("li",null,[i("code",null,"Kernel -> Quirks -> IncreasePciBarSize")])])],-1),D=r("Disabilita il check del board-ID "),S={href:"https://github.com/acidanthera/whatevergreen/releases",target:"_blank",rel:"noopener noreferrer"},R=r("WhateverGreen"),I=r("Patch di AppleHDA "),L={href:"https://github.com/acidanthera/AppleALC/releases",target:"_blank",rel:"noopener noreferrer"},N=r("AppleALC"),F=r("Patch Input/Output di NVMe "),z=i("li",null,"Non richiesto più su High Sierra o più recenti",-1),T=r("Per il power management su Mojave e più recenti: "),E={href:"https://github.com/acidanthera/NVMeFix/releases",target:"_blank",rel:"noopener noreferrer"},G=r("NVMeFix");o.render=function(n,r){const o=e("OutboundLink");return t(),l(a,null,[d,i("ul",null,[i("li",null,[i("a",c,[s,i(o)])])]),p,i("p",null,[h,i("a",u,[g,i(o)]),f]),x,i("p",null,[m,i("a",y,[b,i(o)])]),k,i("ul",null,[P,i("li",null,[_,i("ul",null,[i("li",null,[i("a",C,[M,i(o)]),v,i("a",K,[A,i(o)])])])]),O,i("li",null,[D,i("ul",null,[i("li",null,[i("a",S,[R,i(o)])])])]),i("li",null,[I,i("ul",null,[i("li",null,[i("a",L,[N,i(o)])])])]),i("li",null,[F,i("ul",null,[z,i("li",null,[T,i("a",E,[G,i(o)])])])])])],64)};export default o;
