import{r as e,o as i,c as t,a as n,w as a,F as o,b as l,d as r}from"./app.9c75e1c0.js";const d={},h=n("h1",{id:"fixing-imei-manual",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fixing-imei-manual","aria-hidden":"true"},"#"),l(" Fixing IMEI: Manual")],-1),u={class:"table-of-contents"},s=l("# Finding the ACPI device"),p=l("# Compiling the SSDT"),c=l("# Wrapping up"),f=n("h2",{id:"finding-the-acpi-device",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#finding-the-acpi-device","aria-hidden":"true"},"#"),l(" Finding the ACPI device")],-1),m=l("Finding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from "),g=l("Dumping the DSDT"),S=l(" and "),I=l("Decompiling and Compiling"),D=l(" with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an "),b={href:"https://marketplace.visualstudio.com/items?itemName=Thog.vscode-asl",target:"_blank",rel:"noopener noreferrer"},y=l("ACPI extension"),T=l(" that can also help)."),w=r('<p>Next, search for the following devices:</p><ul><li><code>IMEI</code></li><li><code>HECI</code></li><li><code>MEI</code></li></ul><p>If none of the 3 show up, you&#39;ll need to create an SSDT-IMEI.</p><p><strong>If one of these 3 devices show up</strong>, you do not need SSDT-IMEI! You can simply skip this page.</p><p>The rest of this page will however assume none of those 3 devices showed up.</p><h2 id="compiling-the-ssdt" tabindex="-1"><a class="header-anchor" href="#compiling-the-ssdt" aria-hidden="true">#</a> Compiling the SSDT</h2><p>So there&#39;s actually no edits required to SSDT-IMEI, you can either grab the source code and compile yourself or use the prebuilt</p>',7),x={href:"https://github.com/macos86/Getting-Started-With-ACPI/blob/master/extra-files/compiled/SSDT-IMEI-S.aml",target:"_blank",rel:"noopener noreferrer"},v=l("Prebuilt SSDT-IMEI"),C={href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-IMEI.dsl",target:"_blank",rel:"noopener noreferrer"},M=l("SSDT-IMEI's source code"),E=l("With the SSDT done, you're now "),_=l("ready to compile the SSDT!"),k=n("h2",{id:"wrapping-up",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wrapping-up","aria-hidden":"true"},"#"),l(" Wrapping up")],-1),A=n("p",null,"Once you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:",-1),P=n("strong",null,"Cleanup",-1);d.render=function(l,r){const d=e("RouterLink"),F=e("OutboundLink");return i(),t(o,null,[h,n("nav",u,[n("ul",null,[n("li",null,[n(d,{to:"#finding-the-acpi-device"},{default:a((()=>[s])),_:1})]),n("li",null,[n(d,{to:"#compiling-the-ssdt"},{default:a((()=>[p])),_:1})]),n("li",null,[n(d,{to:"#wrapping-up"},{default:a((()=>[c])),_:1})])])]),f,n("p",null,[m,n(d,{to:"/dump.html"},{default:a((()=>[g])),_:1}),S,n(d,{to:"/compile.html"},{default:a((()=>[I])),_:1}),D,n("a",b,[y,n(F)]),T]),w,n("ul",null,[n("li",null,[n("p",null,[n("a",x,[v,n(F)])])]),n("li",null,[n("p",null,[n("a",C,[M,n(F)])])])]),n("p",null,[E,n(d,{to:"/compile.html"},{default:a((()=>[_])),_:1})]),k,A,n("ul",null,[n("li",null,[n(d,{to:"/cleanup.html"},{default:a((()=>[P])),_:1})])])],64)};export default d;
