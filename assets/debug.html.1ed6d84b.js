import{r as l,o as e,c as i,a as n,w as t,F as a,b as o}from"./app.9c75e1c0.js";const u={},r=n("h1",{id:"opencore-debugging",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#opencore-debugging","aria-hidden":"true"},"#"),o(" OpenCore Debugging")],-1),s=n("p",null,"Hai bisogno di capire perché stai riscontrando problemi o ti stai bloccando? Bene, sei nel posto giusto:",-1),d={class:"table-of-contents"},c=o("# Scambio di file"),g=o("# Modifiche al Config"),p=o("# Misc"),f=o("# Disabilitazione di tutti i log"),m=n("h2",{id:"scambio-di-file",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#scambio-di-file","aria-hidden":"true"},"#"),o(" Scambio di file")],-1),b=n("p",null,[o('Per iniziare, assicurati di utilizzare le versioni "DEBUG" o "NOOPT" di OpenCore. Questo fornirà molte più informazioni rispetto alla versione '),n("code",null,"RELEASE"),o("; i file specifici che devono essere scambiati sono:")],-1),x=n("ul",null,[n("li",null,[o("EFI/BOOT/ "),n("ul",null,[n("li",null,[n("code",null,"BOOTx64.efi")])])]),n("li",null,[o("EFI/OC/Drivers/ "),n("ul",null,[n("li",null,[n("code",null,"OpenRuntime.efi")]),n("li",null,[n("code",null,"OpenCanopy.efi"),o("(se lo stai usando)")])])]),n("li",null,[o("EFI/OC/ "),n("ul",null,[n("li",null,[n("code",null,"OpenCore.efi")])])])],-1),h=n("p",null,[n("img",{src:"/assets/replace.4791e68f.png",alt:""})],-1),E=n("ul",null,[n("li",null,[n("strong",null,"Nota"),o(": Generalmente è meglio eseguire il debug di sistemi senza OpenCanopy, se necessario assicurati che questo file provenga da DEBUG altrimenti non ci saranno praticamente informazioni di debug.")])],-1),v=n("h2",{id:"modifiche-al-config",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#modifiche-al-config","aria-hidden":"true"},"#"),o(" Modifiche al Config")],-1),z=n("p",null,[o("Successivamente, vai al tuo config.plist e individua la sezione "),n("code",null,"Misc"),o(", abbiamo un paio di voci da configurare:")],-1),O=n("h3",{id:"misc",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#misc","aria-hidden":"true"},"#"),o(" Misc")],-1),y=n("p",null,"Qui abiliteremo quanto segue:",-1),D=n("ul",null,[n("li",null,[n("p",null,[n("strong",null,"AppleDebug"),o(": YES")]),n("ul",null,[n("li",null,"Fornisce molte più informazioni di debug, in particolare riguardo a boot.efi e memorizzerà anche il log su disco.")])]),n("li",null,[n("p",null,[n("strong",null,"ApplePanic"),o(": YES")]),n("ul",null,[n("li",null,[o("Questo consentirà di archiviare su disco i kernel panic, consigliamo vivamente di mantenere "),n("code",null,"keepyms = 1"),o(" nelle Argomenti di avvio per preservare quante più informazioni possibili.")])])]),n("li",null,[n("p",null,[n("strong",null,"DisableWatchdog"),o(": YES")]),n("ul",null,[n("li",null,"Disabilita UEFI watchdog, usato per quando OpenCore si blocca su qualcosa di non critico.")])]),n("li",null,[n("p",null,[n("strong",null,"Target"),o(": "),n("code",null,"67"),o("(o calcolarne uno usando i parametri qui di seguito)")]),n("ul",null,[n("li",null,"Utilizzato per abilitare diversi livelli di debug")])])],-1),A=n("table",null,[n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Valore"),n("th",{style:{"text-align":"left"}},"Commento")])]),n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x01")]),n("td",{style:{"text-align":"left"}},"Abilita Registrazione")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x02")]),n("td",{style:{"text-align":"left"}},"Abilita il debug su schermo")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x04")]),n("td",{style:{"text-align":"left"}},"Abilita la registrazione per Data Hub.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x08")]),n("td",{style:{"text-align":"left"}},"Abilita la registrazione per porta seriale.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x10")]),n("td",{style:{"text-align":"left"}},"Abilita la registrazione per variabili.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x20")]),n("td",{style:{"text-align":"left"}},"Abilita la registrazione per variabili UEFI non-volatili.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x40")]),n("td",{style:{"text-align":"left"}},"Abilita la registrazione con scrittura su file.")])])],-1),U=n("p",null,"Per calcolare il Target, possiamo utilizzare un calcolatore HEX e quindi convertirlo in decimale. Poi vogliamo che i nostri valori vengano memorizzati su un file .txt per una visualizzazione successiva:",-1),B=n("ul",null,[n("li",null,[n("code",null,"0x01"),o(" — Abilita registrazione")]),n("li",null,[n("code",null,"0x02"),o(" — Abilita il debug su schermo "),n("ul",null,[n("li",null,"Si noti che questo può aumentare notevolmente i tempi di avvio sui firmware con implementazioni GOP scadenti")])]),n("li",null,[n("code",null,"0x10"),o(" — Abilita la registrazione delle variabili UEFI.")]),n("li",null,[n("code",null,"0x40"),o(" — Abilita la registrazione su file.")])],-1),R=n("p",null,[n("code",null,"0x01"),o(" + "),n("code",null,"0x02"),o(" + "),n("code",null,"0x10"),o(" + "),n("code",null,"0x40"),o(" = "),n("code",null,"0x53")],-1),G=n("p",null,[n("code",null,"0x53"),o(" convertito in decimale diventa "),n("code",null,"83")],-1),P=n("p",null,[o("Quindi possiamo impostare "),n("code",null,"Misc"),o(" -> "),n("code",null,"Debug"),o(" -> "),n("code",null,"Target"),o(" -> "),n("code",null,"83")],-1),q=n("ul",null,[n("li",null,[n("strong",null,"DisplayLevel"),o(": "),n("code",null,"2147483714"),o("(o calcolarne uno usando i parametri qui di seguito) "),n("ul",null,[n("li",null,"Utilizzato per impostare ciò che viene registrato")])])],-1),C=n("table",null,[n("thead",null,[n("tr",null,[n("th",{style:{"text-align":"left"}},"Value"),n("th",{style:{"text-align":"left"}},"Comment")])]),n("tbody",null,[n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x00000002")]),n("td",{style:{"text-align":"left"}},"DEBUG_WARN in DEBUG, NOOPT, RELEASE.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x00000040")]),n("td",{style:{"text-align":"left"}},"DEBUG_INFO in DEBUG, NOOPT.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x00400000")]),n("td",{style:{"text-align":"left"}},"DEBUG_VERBOSE in custom builds.")]),n("tr",null,[n("td",{style:{"text-align":"left"}},[n("code",null,"0x80000000")]),n("td",{style:{"text-align":"left"}},"DEBUG_ERROR in DEBUG, NOOPT, RELEASE.")])])],-1),N=o("Un elenco completo può essere trovato in "),S={href:"https://github.com/tianocore/edk2/blob/UDK2018/MdePkg/Include/Library/DebugLib.h",target:"_blank",rel:"noopener noreferrer"},T=o("DebugLib.h"),L=o("."),_=n("p",null,"A noi interessa solo quanto segue:",-1),F=n("ul",null,[n("li",null,[n("code",null,"0x00000002"),o(" — DEBUG_WARN in DEBUG, NOOPT, RELEASE.")]),n("li",null,[n("code",null,"0x00000040"),o(" — DEBUG_INFO in DEBUG, NOOPT.")]),n("li",null,[n("code",null,"0x80000000"),o(" — DEBUG_ERROR in DEBUG, NOOPT, RELEASE.")])],-1),I=n("p",null,[o("Proprio come con "),n("code",null,"Target"),o(", usiamo una calcolatrice HEX quindi convertiamo in decimale:")],-1),M=n("p",null,[n("code",null,"0x80000042"),o(" convertito in decimale diventa "),n("code",null,"Misc"),o(" -> "),n("code",null,"Debug"),o(" -> "),n("code",null,"DisplayLevel"),o(" -> "),n("code",null,"2147483714")],-1),k=n("p",null,"Una volta fatto, il tuo config.plist dovrebbe assomigliare a questo:",-1),w=n("p",null,[n("img",{src:"/assets/debug.1df765fa.png",alt:""})],-1),H=n("h2",{id:"disabilitazione-di-tutti-i-log",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#disabilitazione-di-tutti-i-log","aria-hidden":"true"},"#"),o(" Disabilitazione di tutti i log")],-1),Q=n("p",null,[o("Per rimuovere completamente la registrazione dei file e eseguire il debug dei messaggi, è sufficiente sostituire tutti i file OpenCore con quelli in RELEASE come abbiamo fatto prima nella sezione "),n("a",{href:"#file-swap"},"Cambio dei File"),o(".")],-1),V=n("p",null,"Infine, per rimuovere la scrittura su disco, impostare quanto segue:",-1),W=n("ul",null,[n("li",null,[o("AppleDebug = "),n("code",null,"NO")]),n("li",null,[o("ApplePanic = "),n("code",null,"NO")]),n("li",null,[o("Target = "),n("code",null,"0")])],-1);u.render=function(o,u){const Y=l("RouterLink"),X=l("OutboundLink");return e(),i(a,null,[r,s,n("nav",d,[n("ul",null,[n("li",null,[n(Y,{to:"#scambio-di-file"},{default:t((()=>[c])),_:1})]),n("li",null,[n(Y,{to:"#modifiche-al-config"},{default:t((()=>[g])),_:1}),n("ul",null,[n("li",null,[n(Y,{to:"#misc"},{default:t((()=>[p])),_:1})])])]),n("li",null,[n(Y,{to:"#disabilitazione-di-tutti-i-log"},{default:t((()=>[f])),_:1})])])]),m,b,x,h,E,v,z,O,y,D,A,U,B,R,G,P,q,C,n("p",null,[N,n("a",S,[T,n(X)]),L]),_,F,I,M,k,w,H,Q,V,W],64)};export default u;
