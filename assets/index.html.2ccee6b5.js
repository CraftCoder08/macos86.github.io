import{r as e,o as t,c as l,a as i,w as a,F as s,b as o,d}from"./app.9c75e1c0.js";const n={},r=i("h1",{id:"fixing-embedded-controller-ssdt-ec-usbx",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#fixing-embedded-controller-ssdt-ec-usbx","aria-hidden":"true"},"#"),o(" Fixing Embedded Controller (SSDT-EC/USBX)")],-1),h={class:"table-of-contents"},u=o("# What this SSDT does"),c=o("# Methods to make this SSDT"),p=d('<h2 id="what-this-ssdt-does" tabindex="-1"><a class="header-anchor" href="#what-this-ssdt-does" aria-hidden="true">#</a> What this SSDT does</h2><p>The purpose of SSDT-EC/USBX is a couple things:</p><ul><li>On desktops, the EC(or better known as the embedded controller) isn&#39;t compatible with AppleACPIEC driver, to get around this we disable this device when running macOS</li><li>AppleBusPowerController will look for a device named <code>EC</code>, so we will want to create a fake device for this kext to load onto <ul><li>AppleBusPowerController also requires a USBX device to supply USB power properties for Skylake and newer, so we will bundle this device in with the EC fix</li></ul></li><li>On laptops, the EC is used for hotkeys and battery so disabling this isn&#39;t all too ideal. Problem is our EC&#39;s name isn&#39;t compatible, so we will create a simple &quot;fake&quot; EC device that will satisfy Apple</li></ul><p>So TL;DR:</p><ul><li>EC is embedded controller</li><li>Desktops will want real EC off, and a fake EC created</li><li>Laptops will just want an additional fake EC present</li><li>Skylake and newer devices will want USBX as well</li></ul><h2 id="methods-to-make-this-ssdt" tabindex="-1"><a class="header-anchor" href="#methods-to-make-this-ssdt" aria-hidden="true">#</a> Methods to make this SSDT</h2><p>For the EC fix, there are 3 methods you can choose from:</p>',7),m=o("Prebuilt"),w=o("SSDTTime"),f=o("Manual");n.render=function(o,d){const n=e("RouterLink");return t(),l(s,null,[r,i("nav",h,[i("ul",null,[i("li",null,[i(n,{to:"#what-this-ssdt-does"},{default:a((()=>[u])),_:1})]),i("li",null,[i(n,{to:"#methods-to-make-this-ssdt"},{default:a((()=>[c])),_:1})])])]),p,i("ul",null,[i("li",null,[i(n,{to:"/Getting-Started-With-ACPI/Universal/ec/prebuilt.html"},{default:a((()=>[m])),_:1})]),i("li",null,[i(n,{to:"/Getting-Started-With-ACPI/Universal/ec/ssdttime.html"},{default:a((()=>[w])),_:1})]),i("li",null,[i(n,{to:"/Getting-Started-With-ACPI/Universal/ec/manual.html"},{default:a((()=>[f])),_:1})])])],64)};export default n;
