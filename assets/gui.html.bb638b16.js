import{r as e,o as l,c as n,a as o,w as t,F as u,b as i,d as r}from"./app.9c75e1c0.js";import{a,_ as s,b as d}from"./gui-old.12c92faa.js";const c={},h=o("h1",{id:"opencore-beauty-treatment",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#opencore-beauty-treatment","aria-hidden":"true"},"#"),i(" OpenCore beauty treatment")],-1),p={class:"table-of-contents"},g=i("# Setting up OpenCore's GUI"),f=i("# Setting up Boot-chime with AudioDxe"),m=o("h2",{id:"setting-up-opencore-s-gui",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#setting-up-opencore-s-gui","aria-hidden":"true"},"#"),i(" Setting up OpenCore's GUI")],-1),b=i("So to get started, we're gonna need 0.5.7 or newer as these builds have the GUI included with the rest of the files. If you're on an older version, I recommend updating: "),A=i("Updating OpenCore"),y=o("p",null,"Once that's done, we'll need a couple things:",-1),x={href:"https://github.com/acidanthera/OcBinaryData",target:"_blank",rel:"noopener noreferrer"},O=i("Binary Resources"),C={href:"https://github.com/acidanthera/OpenCorePkg/releases",target:"_blank",rel:"noopener noreferrer"},v=i("OpenCanopy.efi"),w=o("ul",null,[o("li",null,"Note: OpenCanopy.efi must be from the same build as your OpenCore files, as mismatched files can cause boot issues")],-1),k=o("p",null,"Once you have both of these, we'll next want to add it to our EFI partition:",-1),D=i("Add the "),I={href:"https://github.com/acidanthera/OcBinaryData",target:"_blank",rel:"noopener noreferrer"},F=i("Resources folder"),V=i(" to EFI/OC"),S=o("li",null,"Add OpenCanopy.efi to EFI/OC/Drivers",-1),E=o("p",null,[o("img",{src:"/assets/folder-gui.c28b0df5.png",alt:""})],-1),B=o("p",null,"Now in our config.plist, we have 4 things we need to fix:",-1),P=o("li",null,[o("code",null,"Misc -> Boot -> PickerMode"),i(": "),o("code",null,"External")],-1),R=o("code",null,"Misc -> Boot -> PickerAttributes",-1),_=i(": "),M=o("code",null,"17",-1),G=i("This enables mouse/trackpad support as well as .VolumeIcon.icns reading from the drive, allows for macOS installer icons to appear in the picker "),U=i("Other settings for PickerAttributes can be found in the "),N={href:"https://github.com/acidanthera/OpenCorePkg/blob/master/Docs/Configuration.pdf",target:"_blank",rel:"noopener noreferrer"},T=i("Configuration.pdf"),H=r("<li><code>Misc -&gt; Boot -&gt; PickerVariant</code>: <code>Acidanthera\\GoldenGate</code><ul><li>Applicable variables: <ul><li><code>Auto</code> — Automatically select one set of icons based on DefaultBackground colour.</li><li><code>Acidanthera\\Syrah</code> — Normal icon set.</li><li><code>Acidanthera\\GoldenGate</code> — Nouveau icon set.</li><li><code>Acidanthera\\Chardonnay</code> — Vintage icon set.</li></ul></li></ul></li><li><code>UEFI -&gt; Drivers</code> and add OpenCanopy.efi</li>",2),L=o("p",null,"Once all this is saved, you can reboot and be greeted with a true Mac-like GUI:",-1),j=o("table",null,[o("thead",null,[o("tr",null,[o("th",{style:{"text-align":"left"}},"Default (Syrah)"),o("th",{style:{"text-align":"left"}},"Modern (GoldenGate)"),o("th",{style:{"text-align":"left"}},"Old (Chardonnay)")])]),o("tbody",null,[o("tr",null,[o("td",{style:{"text-align":"left"}},[o("img",{src:a,alt:""})]),o("td",{style:{"text-align":"left"}},[o("img",{src:s,alt:""})]),o("td",{style:{"text-align":"left"}},[o("img",{src:d,alt:""})])])])],-1),q=o("h2",{id:"setting-up-boot-chime-with-audiodxe",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#setting-up-boot-chime-with-audiodxe","aria-hidden":"true"},"#"),i(" Setting up Boot-chime with AudioDxe")],-1),z=o("p",null,"So to start, we'll need a couple things:",-1),W=o("li",null,[i("Onboard audio output "),o("ul",null,[o("li",null,"USB DACs will not work"),o("li",null,"GPU audio out is a hit or miss")])],-1),Y={href:"https://github.com/acidanthera/OpenCorePkg/releases",target:"_blank",rel:"noopener noreferrer"},J=i("AudioDxe"),K=i(" in both EFI/OC/Drivers and UEFI -> Drivers"),Q={href:"https://github.com/acidanthera/OcBinaryData",target:"_blank",rel:"noopener noreferrer"},X=i("Binary Resources"),Z=o("ul",null,[o("li",null,"Add the Resources folder to EFI/OC, just like we did with the OpenCore GUI section"),o("li",null,[i("For those running out of space, "),o("code",null,"OCEFIAudio_VoiceOver_Boot.wav"),i(" is all that's required for the Boot-Chime")])],-1),$=i("Debug version of OpenCore with logging enabled "),ee=i("See "),le={href:"https://dortania.github.io/OpenCore-Install-Guide/troubleshooting/debug.html",target:"_blank",rel:"noopener noreferrer"},ne=i("OpenCore Debugging"),oe=i(" for more info"),te=o("li",null,"Note: after you're done setting up, you can revert to the RELEASE builds",-1),ue=o("p",null,[o("strong",null,"Settings up NVRAM"),i(":")],-1),ie=o("ul",null,[o("li",null,[i("NVRAM -> Add -> 7C436110-AB2A-4BBB-A880-FE41995C9F82: "),o("ul",null,[o("li",null,[o("code",null,"SystemAudioVolume | Data | 0x46")]),o("li",null,[i("This is the boot-chime and screen reader volume, note it's in hexadecimal so would become "),o("code",null,"70"),i(" in decimal")])])])],-1),re=o("p",null,[o("strong",null,"Setting up UEFI -> Audio:")],-1),ae=o("strong",null,"AudioCodec:",-1),se=o("li",null,"Codec address of Audio controller",-1),de=i("To find yours: "),ce=i("Check "),he={href:"https://github.com/khronokernel/IORegistryClone/blob/master/ioreg-302.zip",target:"_blank",rel:"noopener noreferrer"},pe=i("IORegistryExplorer"),ge=i(" -> HDEF -> AppleHDAController -> IOHDACodecDevice and see the "),fe=o("code",null,"IOHDACodecAddress",-1),me=i(" property"),be=o("li",null,[i("ex: "),o("code",null,"0x0"),o("ul",null,[o("li",null,"Can also check via terminal(Note if multiple show up, use the vendor ID to find the right device)l:")])],-1),Ae=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[i("ioreg -rxn IOHDACodecDevice "),o("span",{class:"token operator"},"|"),i(),o("span",{class:"token function"},"grep"),i(" VendorID   // List all possible devices\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),ye=o("div",{class:"language-bash ext-sh line-numbers-mode"},[o("pre",{class:"language-bash"},[o("code",null,[i("ioreg -rxn IOHDACodecDevice "),o("span",{class:"token operator"},"|"),i(),o("span",{class:"token function"},"grep"),i(" IOHDACodecAddress // Grab the codec address\n")])]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br")])],-1),xe=o("p",null,[o("strong",null,"Audio Device:")],-1),Oe=o("li",null,"PciRoot of audio controller",-1),Ce=i("Run "),ve={href:"https://github.com/acidanthera/gfxutil/releases",target:"_blank",rel:"noopener noreferrer"},we=i("gfxutil"),ke=i(" to find the path: "),De=o("ul",null,[o("li",null,[o("code",null,"/path/to/gfxutil -f HDEF")]),o("li",null,[i("ex: "),o("code",null,"PciRoot(0x0)/Pci(0x1f,0x3)")])],-1),Ie=o("li",null,[o("p",null,[o("strong",null,"AudioOut:")]),o("ul",null,[o("li",null,"The specific output of your Audio controller, easiest way to find the right one is to go through each one(from 0 to N - 1, where N is the number of outputs listed in your log)"),o("li",null,[i("ex: 5 outputs would translate to 0-4 as possible values "),o("ul",null,[o("li",null,"You can find all the ones for your codec in the OpenCore debug logs:")])])])],-1),Fe=o("div",{class:"language-text ext-text line-numbers-mode"},[o("pre",{class:"language-text"},[o("code",null,"06:065 00:004 OCAU: Matching PciRoot(0x0)/Pci(0x1F,0x3)/VenMsg(A9003FEB-D806-41DB-A491-5405FEEF46C3,00000000)...\n06:070 00:005 OCAU: 1/2 PciRoot(0x0)/Pci(0x1F,0x3)/VenMsg(A9003FEB-D806-41DB-A491-5405FEEF46C3,00000000) (5 outputs) - Success\n")]),o("div",{class:"line-numbers"},[o("span",{class:"line-number"},"1"),o("br"),o("span",{class:"line-number"},"2"),o("br")])],-1),Ve=o("ul",null,[o("li",null,[o("p",null,[o("strong",null,"AudioSupport:")]),o("ul",null,[o("li",null,[i("Set this to "),o("code",null,"True")])])]),o("li",null,[o("p",null,[o("strong",null,"MinimumVolume:")]),o("ul",null,[o("li",null,[i("Volume level from "),o("code",null,"0"),i(" to "),o("code",null,"100")]),o("li",null,[i("To not blow the speakers, set it to "),o("code",null,"70")]),o("li",null,[i("Note boot-chime will not play if MinimumVolume is higher than "),o("code",null,"SystemAudioVolume"),i(" that we set back in the "),o("code",null,"NVRAM"),i(" section")])])]),o("li",null,[o("p",null,[o("strong",null,"PlayChime:")]),o("ul",null,[o("li",null,[i("Set this to "),o("code",null,"Enabled")])])]),o("li",null,[o("p",null,[o("strong",null,"SetupDelay:")]),o("ul",null,[o("li",null,[i("By default, leave this at "),o("code",null,"0")]),o("li",null,[i("Some codecs many need extra time for setup, we recommend setting to "),o("code",null,"500000"),i("(0.5 Seconds) if you have issues")])])]),o("li",null,[o("p",null,[o("strong",null,"VolumeAmplifier:")]),o("ul",null,[o("li",null,"The Volume amplification, value will differ depending on your codec"),o("li",null,[i("Formula is as follows: "),o("ul",null,[o("li",null,"(SystemAudioVolume * VolumeAmplifier)/100 = Raw Volume(but cannot exceed 100)"),o("li",null,[i("ex: ("),o("code",null,"70"),i(" x "),o("code",null,"VolumeAmplifier"),i(")/"),o("code",null,"100"),i(" = "),o("code",null,"100"),i(" -> ("),o("code",null,"100"),i(" x "),o("code",null,"100"),i(") / "),o("code",null,"70"),i(" = VolumeAmplifier = "),o("code",null,"142.9"),i("(we'll round it to "),o("code",null,"143"),i(" for simplicity)")])])])])])],-1),Se=o("p",null,"Once done, you should get something like this:",-1),Ee=o("p",null,[o("img",{src:"/assets/audio-config.e124d3fe.png",alt:""})],-1),Be=o("p",null,[o("strong",null,"Note for visually impaired"),i(":")],-1),Pe=i("OpenCore hasn't forgotten about you! With the AudioDxe setup, you can enable both picker audio and FileVault VoiceOver with these 2 settings: "),Re=o("li",null,[o("code",null,"Misc -> Boot -> PickerAudioAssist -> True"),i(" to enable picker audio")],-1),_e=o("code",null,"UEFI -> ProtocolOverrides -> AppleAudio -> True",-1),Me=i(" to enable FileVault voice over "),Ge=i("See "),Ue=i("Security and FileVault"),Ne=i(" on how to setup the rest for proper FileVault support");c.render=function(i,r){const a=e("RouterLink"),s=e("OutboundLink");return l(),n(u,null,[h,o("nav",p,[o("ul",null,[o("li",null,[o(a,{to:"#setting-up-opencore-s-gui"},{default:t((()=>[g])),_:1})]),o("li",null,[o(a,{to:"#setting-up-boot-chime-with-audiodxe"},{default:t((()=>[f])),_:1})])])]),m,o("p",null,[b,o(a,{to:"/OpenCore-Post-Install/universal/update.html"},{default:t((()=>[A])),_:1})]),y,o("ul",null,[o("li",null,[o("a",x,[O,o(s)])]),o("li",null,[o("a",C,[v,o(s)]),w])]),k,o("ul",null,[o("li",null,[D,o("a",I,[F,o(s)]),V]),S]),E,B,o("ul",null,[P,o("li",null,[R,_,M,o("ul",null,[o("li",null,[G,o("ul",null,[o("li",null,[U,o("a",N,[T,o(s)])])])])])]),H]),L,j,q,z,o("ul",null,[W,o("li",null,[o("a",Y,[J,o(s)]),K]),o("li",null,[o("a",Q,[X,o(s)]),Z]),o("li",null,[$,o("ul",null,[o("li",null,[ee,o("a",le,[ne,o(s)]),oe]),te])])]),ue,ie,re,o("ul",null,[o("li",null,[ae,o("ul",null,[se,o("li",null,[de,o("ul",null,[o("li",null,[ce,o("a",he,[pe,o(s)]),ge,fe,me]),be])])])])]),Ae,ye,o("ul",null,[o("li",null,[xe,o("ul",null,[Oe,o("li",null,[Ce,o("a",ve,[we,o(s)]),ke,De])])]),Ie]),Fe,Ve,Se,Ee,Be,o("ul",null,[o("li",null,[Pe,o("ul",null,[Re,o("li",null,[_e,Me,o("ul",null,[o("li",null,[Ge,o(a,{to:"/OpenCore-Post-Install/universal/security.html"},{default:t((()=>[Ue])),_:1}),Ne])])])])])])],64)};export default c;
