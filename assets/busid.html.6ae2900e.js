import{r as e,o as n,c as l,a,w as t,F as s,b as r}from"./app.9c75e1c0.js";const i={},u=a("h1",{id:"patching-bus-ids",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#patching-bus-ids","aria-hidden":"true"},"#"),r(" Patching Bus IDs")],-1),o=a("p",null,"This section is mainly relevant for those who cannot use certain display outputs regardless of the connector-type or SMBIOS patch, as Apple has hardcoded the output BusIDs in a way that doesn't match your hardware. To resolve, we'll be manually patching these bus IDs into supporting our hardware.",-1),p=a("p",null,"This page will be a bit more technical as we've assumed you've read through the previous pages and have a decent grasp of WhateverGreen.",-1),c=r("Patching the display type"),d=r("Patching the VRAM requirement of macOS"),b=a("h2",{id:"parsing-the-framebuffer",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#parsing-the-framebuffer","aria-hidden":"true"},"#"),r(" Parsing the framebuffer")],-1),h=a("p",null,[r("To start, let's assume we're using a Z390 board with a UHD 630. This system is iGPU-only in macOS and has issues with using certain display-outs, and is using the "),a("code",null,"0x3E9B0007"),r(" framebuffer.")],-1),m=r("When we look at this framebuffer from "),f={href:"https://github.com/acidanthera/WhateverGreen/blob/master/Manual/FAQ.IntelHD.en.md",target:"_blank",rel:"noopener noreferrer"},g=r("WhateverGreen's manual"),x=r(", we see the following:"),y=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"ID: 3E9B0007, STOLEN: 57 MB, FBMEM: 0 bytes, VRAM: 1536 MB, Flags: 0x00801302\nTOTAL STOLEN: 58 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 172 MB, MAX OVERALL: 173 MB (181940224 bytes)\nGPU Name: Intel UHD Graphics 630\nModel Name(s):\nCamelia: Disabled\nMobile: 0, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br"),a("span",{class:"line-number"},"10"),a("br"),a("span",{class:"line-number"},"11"),a("br"),a("span",{class:"line-number"},"12"),a("br")])],-1),w=a("p",null,"Now let's parse it down to the BudID information, as this is what we will be patching:",-1),D=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br")])],-1),C=a("p",null,"Here we see that this framebuffer personality has 3 Bus IDs listed, let's try to break them down to be a bit more understandable. Let's take entry 1:",-1),v=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br")])],-1),I=a("table",null,[a("thead",null,[a("tr",null,[a("th",{style:{"text-align":"left"}},"Bit"),a("th",{style:{"text-align":"left"}},"Name"),a("th",{style:{"text-align":"left"}},"Value")])]),a("tbody",null,[a("tr",null,[a("td",{style:{"text-align":"left"}},"Bit 1"),a("td",{style:{"text-align":"left"}},"Port"),a("td",{style:{"text-align":"left"}},"01")]),a("tr",null,[a("td",{style:{"text-align":"left"}},"Bit 2"),a("td",{style:{"text-align":"left"}},"Bus ID"),a("td",{style:{"text-align":"left"}},"05")]),a("tr",null,[a("td",{style:{"text-align":"left"}},"Bit 3-4"),a("td",{style:{"text-align":"left"}},"Pipe Number"),a("td",{style:{"text-align":"left"}},"0900")]),a("tr",null,[a("td",{style:{"text-align":"left"}},"Bit 5-8"),a("td",{style:{"text-align":"left"}},"Connector Type"),a("td",{style:{"text-align":"left"}},"00040000")]),a("tr",null,[a("td",{style:{"text-align":"left"}},"Bit 9-12"),a("td",{style:{"text-align":"left"}},"Flags"),a("td",{style:{"text-align":"left"}},"C7030000")])])],-1),M=a("p",null,"Things to keep in mind:",-1),B=a("li",null,"BusID is a unique value and cannot be used by multiple entries",-1),P=r("Connector-type values are the same as discussed in the "),A=r("Connector-type patching page"),k=a("h2",{id:"mapping-the-video-ports",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mapping-the-video-ports","aria-hidden":"true"},"#"),r(" Mapping the video ports")],-1),T=a("p",null,"Here we have 2 sections:",-1),O=a("ul",null,[a("li",null,[a("a",{href:"#mapping-withinb-macos"},"Mapping within macOS"),a("ul",null,[a("li",null,"You can boot macOS and use at least 1 display")])]),a("li",null,[a("a",{href:"#mapping-without-macos"},"Mapping without macOS"),a("ul",null,[a("li",null,"Blackscreen on all displays")])])],-1),S=a("h3",{id:"mapping-within-macos",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mapping-within-macos","aria-hidden":"true"},"#"),r(" Mapping within macOS")],-1),L=a("p",null,"Mapping videos in macOS is fairly easy, as we can assume that one of our ports is mapped correctly in the framebuffer.",-1),R=r("For this example, we'll explain the common "),H={href:"https://dortania.github.io/OpenCore-Install-Guide/config-laptop.plist/kaby-lake.html#deviceproperties",target:"_blank",rel:"noopener noreferrer"},N=r("HDMI-hotplug fix for Kaby lake users"),E=r(". To start, lets look at the 0x591B0000 framebuffer:"),F=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"ID: 591B0000, STOLEN: 38 MB, FBMEM: 21 MB, VRAM: 1536 MB, Flags: 0x0000130B\nTOTAL STOLEN: 39 MB, TOTAL CURSOR: 1 MB (1572864 bytes), MAX STOLEN: 136 MB, MAX OVERALL: 137 MB (144191488 bytes)\nModel name: Intel HD Graphics KBL CRB\nCamellia: CamelliaDisabled (0), Freq: 1388 Hz, FreqMax: 1388 Hz\nMobile: 1, PipeCount: 3, PortCount: 3, FBMemoryCount: 3\n[0] busId: 0x00, pipe: 8, type: 0x00000002, flags: 0x00000098 - ConnectorLVDS\n[2] busId: 0x04, pipe: 10, type: 0x00000800, flags: 0x00000187 - ConnectorHDMI\n[3] busId: 0x06, pipe: 10, type: 0x00000400, flags: 0x00000187 - ConnectorDP\n00000800 02000000 98000000\n02040A00 00080000 87010000\n03060A00 00040000 87010000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br"),a("span",{class:"line-number"},"10"),a("br"),a("span",{class:"line-number"},"11"),a("br")])],-1),V=a("p",null,"Here we see that entry 2 is the HDMI port however on a real Kaby lake laptop it's very common for hot plug to kernel panic the machine. This is due to the bus ID and port not aligning perfectly with the hardware.",-1),_=a("p",null,"To resolve, we'll want to patch it to something more appropriate(ie. 0204 to 0105, these have been tested to work properly)",-1),G=a("p",null,"There are 2 ways to patch:",-1),U=a("ul",null,[a("li",null,[a("a",{href:"#replace-the-entire-entry"},"Replace the entire entry")]),a("li",null,[a("a",{href:"#replace-sectons-of-the-entry"},"Replace sections of the entry")])],-1),W=a("h4",{id:"replace-the-entire-entry",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#replace-the-entire-entry","aria-hidden":"true"},"#"),r(" Replace the entire entry")],-1),q=a("p",null,"To replace the entire entry, we'll first want to locate our entry and ensure it's enumerated correctly. This is because Apple's has entries starting at 0 and progresses through that:",-1),X=a("ul",null,[a("li",null,"con0"),a("li",null,"con1"),a("li",null,"con2")],-1),K=a("p",null,"So since entry 2 is the second in the list, we'll want to use con1:",-1),Y=a("ul",null,[a("li",null,"framebuffer-con2-enable")],-1),z=a("p",null,"Next lets make the patch, we know that port needs to be patched to 01 and BusID changed to 05:",-1),j=a("ul",null,[a("li",null,[a("strong",null,"0105"),r("0A00 00080000 87010000")])],-1),Q=a("p",null,"And finally, we're given the following patches:",-1),Z=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"framebuffer-patch-enable | Data | 01000000\nframebuffer-con2-enable  | Data | 01000000\nframebuffer-con2-alldata | Data | 01050A00 00080000 87010000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br")])],-1),J=a("h4",{id:"replace-sections-of-the-entry",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#replace-sections-of-the-entry","aria-hidden":"true"},"#"),r(" Replace sections of the entry")],-1),$=a("p",null,"To replace sections of the entry, we'll first want to locate our entry and ensure it's enumerated correctly. This is because Apple's has entries starting at 0 and progresses through that:",-1),ee=a("ul",null,[a("li",null,"con0"),a("li",null,"con1"),a("li",null,"con2")],-1),ne=a("p",null,"So since entry 2 is the second in the list, we'll want to use con1:",-1),le=a("ul",null,[a("li",null,"framebuffer-con2-enable")],-1),ae=a("p",null,"Next lets make the patch, we know that port needs to be patched to 01 and BusID changed to 05:",-1),te=a("ul",null,[a("li",null,"framebuffer-con2-index = 01"),a("li",null,"framebuffer-con2-busid = 05")],-1),se=a("p",null,"And finally, we get these patches:",-1),re=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"framebuffer-patch-enable | Data | 01000000\nframebuffer-con2-enable  | Data | 01000000\nframebuffer-con2-index   | Data | 01\nframebuffer-con2-busid   | Data | 05\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br")])],-1),ie=a("h3",{id:"mapping-without-macos",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mapping-without-macos","aria-hidden":"true"},"#"),r(" Mapping without macOS")],-1),ue=a("p",null,[r("Mapping your display outs is fairly simple, "),a("em",null,"however"),r(" is quite time consuming as you need to try every BusID value until you get an output.")],-1),oe=a("p",null,"For this example, we'll use the 0x3E9B0007 framebuffer again.",-1),pe=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"[1] busId: 0x05, pipe: 9, type: 0x00000400, flags: 0x000003C7 - DP\n[2] busId: 0x04, pipe: 10, type: 0x00000400, flags: 0x000003C7 - DP\n[3] busId: 0x06, pipe: 8, type: 0x00000400, flags: 0x000003C7 - DP\n01050900 00040000 C7030000\n02040A00 00040000 C7030000\n03060800 00040000 C7030000\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br")])],-1),ce=a("p",null,"To start, we'll be trying to go through entry 1's BusIDs in hope we find working value.",-1),de=a("h4",{id:"_1-here-plug-in-your-hdmi-display",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_1-here-plug-in-your-hdmi-display","aria-hidden":"true"},"#"),r(" 1. Here plug in your HDMI display")],-1),be=a("h4",{id:"_2-set-port-1-to-the-hdmi-connector-type",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_2-set-port-1-to-the-hdmi-connector-type","aria-hidden":"true"},"#"),r(" 2. Set Port 1 to the HDMI connector type")],-1),he=a("ul",null,[a("li",null,[r("01xx0900 "),a("strong",null,"00080000"),r(" C7030000")])],-1),me=a("details",{class:"custom-container details"},[a("summary",null,"Supported Connector Types"),a("p",null,"Common connector types supported in macOS"),a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"<02 00 00 00>        LVDS and eDP      - Laptop displays\n<10 00 00 00>        VGA               - Unsupported in 10.8 and newer\n<00 04 00 00>        DisplayPort       - USB-C display-out are DP internally\n<01 00 00 00>        DUMMY             - Used when there is no physical port\n<00 08 00 00>        HDMI\n<80 00 00 00>        S-Video\n<04 00 00 00>        DVI (Dual Link)\n<00 02 00 00>        DVI (Single Link)\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br")])]),a("p",null,"Reminder that VGA on Skylake and newer are actually DisplayPort internally, so use that connector type instead.")],-1),fe=a("h5",{id:"_3-disable-ports-2-and-3-with-busid-00",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_3-disable-ports-2-and-3-with-busid-00","aria-hidden":"true"},"#"),r(" 3. Disable ports 2 and 3 with busid=00")],-1),ge=a("ul",null,[a("li",null,[r("02"),a("strong",null,"00"),r("0A00 00040000 C7030000")]),a("li",null,[r("03"),a("strong",null,"00"),r("0800 00040000 C7030000")])],-1),xe=a("h5",{id:"_4-walk-through-busids-for-port-1-if-the-previous-didn-t-work-the-maximum-busid-on-most-platforms-generally-0x06",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#_4-walk-through-busids-for-port-1-if-the-previous-didn-t-work-the-maximum-busid-on-most-platforms-generally-0x06","aria-hidden":"true"},"#"),r(" 4. Walk through busids for Port 1 if the previous didn't work. The maximum busid on most platforms generally 0x06")],-1),ye=a("ul",null,[a("li",null,[r("01"),a("strong",null,"01"),r("0900 00080000 C7030000")]),a("li",null,[r("01"),a("strong",null,"02"),r("0900 00080000 C7030000")]),a("li",null,[r("01"),a("strong",null,"03"),r("0900 00080000 C7030000")]),a("li",null,"etc")],-1),we=a("p",null,"If you still get no output, set port 1's busid to 00 and start going through busids for port 2 and so on",-1),De=a("ul",null,[a("li",null,"port 1 = 01000900 00040000 C7030000"),a("li",null,[r("port 2 = 02"),a("strong",null,"xx"),r("0A00 00080000 C7030000")]),a("li",null,"port 3 = 03000800 00040000 C7030000")],-1),Ce=a("h4",{id:"adding-to-your-config-plist",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#adding-to-your-config-plist","aria-hidden":"true"},"#"),r(" Adding to your config.plist")],-1),ve=a("p",null,[r("You'll now want to add the following patches to "),a("code",null,"DeviceProperteies -> Add -> PciRoot(0x0)/Pci(0x2,0x0)"),r(":")],-1),Ie=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"framebuffer-patch-enable | Data | 01000000\nframebuffer-con0-enable  | Data | 01000000\nframebuffer-con1-enable  | Data | 01000000\nframebuffer-con2-enable  | Data | 01000000\nframebuffer-con0-alldata | Data | port 1 (ie. 01010900 00080000 C7030000)\nframebuffer-con1-alldata | Data | port 2 (ie. 02000A00 00040000 C7030000)\nframebuffer-con2-alldata | Data | port 3 (ie. 03000800 00040000 C7030000)\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br")])],-1),Me=a("p",null,"Note that:",-1),Be=a("ul",null,[a("li",null,"port 1 would be labeled as con0"),a("li",null,"port 1's BusID is set to 01"),a("li",null,"port 2 and 3's BusID are set to 00, disabling them")],-1),Pe=a("p",null,"When done, you should get something similar:",-1),Ae=a("p",null,[a("img",{src:"/assets/path-done.5c713b22.png",alt:""})],-1),ke=a("p",null,"And as mentioned before, if this combo doesn't work, increment port 1's BusID and if that doesn't work disable port 1's busID and try port 2 and so forth.",-1);i.render=function(r,i){const Te=e("RouterLink"),Oe=e("OutboundLink");return n(),l(s,null,[u,o,p,a("ul",null,[a("li",null,[a(Te,{to:"/OpenCore-Post-Install/gpu-patching/intel-patching/connector.html"},{default:t((()=>[c])),_:1})]),a("li",null,[a(Te,{to:"/OpenCore-Post-Install/gpu-patching/intel-patching/vram.html"},{default:t((()=>[d])),_:1})])]),b,h,a("p",null,[m,a("a",f,[g,a(Oe)]),x]),y,w,D,C,v,I,M,a("ul",null,[B,a("li",null,[P,a(Te,{to:"/OpenCore-Post-Install/gpu-patching/intel-patching/connector.html"},{default:t((()=>[A])),_:1})])]),k,T,O,S,L,a("p",null,[R,a("a",H,[N,a(Oe)]),E]),F,V,_,G,U,W,q,X,K,Y,z,j,Q,Z,J,$,ee,ne,le,ae,te,se,re,ie,ue,oe,pe,ce,de,be,he,me,fe,ge,xe,ye,we,De,Ce,ve,Ie,Me,Be,Pe,Ae,ke],64)};export default i;
