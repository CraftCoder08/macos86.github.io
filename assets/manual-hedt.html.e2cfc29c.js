import{r as e,o as n,c as l,a,w as t,F as s,b as i}from"./app.9c75e1c0.js";import{_ as r,a as o}from"./pci0.3fd67303.js";const u={},d=a("h1",{id:"fixing-system-clocks-on-hedt-manual",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#fixing-system-clocks-on-hedt-manual","aria-hidden":"true"},"#"),i(" Fixing System Clocks on HEDT: Manual")],-1),h={class:"table-of-contents"},c=i("# Seeing if you need SSDT-RTC0-RANGE"),p=i("# Finding the ACPI path"),m=i("# Edits to the sample SSDT"),g=i("# Compiling the SSDT"),b=i("# Wrapping up"),f=a("h2",{id:"seeing-if-you-need-ssdt-rtc0-range",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#seeing-if-you-need-ssdt-rtc0-range","aria-hidden":"true"},"#"),i(" Seeing if you need SSDT-RTC0-RANGE")],-1),S=i("To start, first open your decompiled DSDT you got from "),C=i("Dumping the DSDT"),x=i(" and "),T=i("Decompiling and Compiling"),y=i(" with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an "),P={href:"https://marketplace.visualstudio.com/items?itemName=Thog.vscode-asl",target:"_blank",rel:"noopener noreferrer"},w=i("ACPI extension"),D=i(" that can also help)."),_=a("p",null,[i("Now search for "),a("code",null,"PNP0B00"),i(" and look at the "),a("code",null,"_CRS"),i(" entry within it:")],-1),R=a("p",null,[a("img",{src:"/assets/rtc-range-check.7d8ebe7b.png",alt:""})],-1),v=a("p",null,"And from the above example, we see we have 2 banks of RTC memory:",-1),A=a("ul",null,[a("li",null,"Bank 1: starts at 0x70 and is length 0x2"),a("li",null,"Bank 2: starts at 0x74 and is length 0x4")],-1),k=a("p",null,"Now the problem is that the OEM forgot to mat sections 0x72 and 0x73. Because of this, macOS may halt while booting(prominently in Big Sur)",-1),L=a("p",null,"And finally, verify if it has an _STA method as well. This will be used shortly",-1),I=a("h2",{id:"finding-the-acpi-path",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#finding-the-acpi-path","aria-hidden":"true"},"#"),i(" Finding the ACPI path")],-1),N=i("Finding the ACPI pathing is quite easy actually, first open your decompiled DSDT you got from "),B=i("Dumping the DSDT"),F=i(" and "),E=i("Decompiling and Compiling"),O=i(" with either MaciASL(if in macOS) or any other text editor if in Windows or Linux(VSCode has an "),j={href:"https://marketplace.visualstudio.com/items?itemName=Thog.vscode-asl",target:"_blank",rel:"noopener noreferrer"},M=i("ACPI extension"),W=i(" that can also help)."),G=a("p",null,"To start, search for the following:",-1),V=a("ul",null,[a("li",null,[i("Finding the RTC name: "),a("ul",null,[a("li",null,[i("Search "),a("code",null,"PNP0B00")])])]),a("li",null,[i("Finding the LowPinCount path: "),a("ul",null,[a("li",null,[i("Search "),a("code",null,"Name (_ADR, 0x001F0000)")])])]),a("li",null,[i("Finding the PCI path: "),a("ul",null,[a("li",null,[i("Search "),a("code",null,"PNP0A08"),i(" (If multiple show up, use the first one)")])])])],-1),q=a("p",null,"You should get something like the following show up:",-1),z=a("table",null,[a("thead",null,[a("tr",null,[a("th",{style:{"text-align":"center"}},"RTC Pathing"),a("th",{style:{"text-align":"center"}},"LPC Pathing"),a("th",{style:{"text-align":"center"}},"PCI Pathing")])]),a("tbody",null,[a("tr",null,[a("td",{style:{"text-align":"center"}},[a("img",{src:"/assets/rtc-name.2c8d09a1.png",alt:""})]),a("td",{style:{"text-align":"center"}},[a("img",{src:r,alt:""})]),a("td",{style:{"text-align":"center"}},[a("img",{src:o,alt:""})])])])],-1),H=a("p",null,[i("From the above, we can see we have "),a("code",null,"RTC"),i(", "),a("code",null,"LPC0"),i(" and "),a("code",null,"PCI0"),i(". Now we can head to the next stage")],-1),Y=a("h2",{id:"edits-to-the-sample-ssdt",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#edits-to-the-sample-ssdt","aria-hidden":"true"},"#"),i(" Edits to the sample SSDT")],-1),Z=a("p",null,"Now that we have our ACPI path, lets grab our SSDT and get to work:",-1),J={href:"https://github.com/acidanthera/OpenCorePkg/tree/master/Docs/AcpiSamples/Source/SSDT-RTC0-RANGE.dsl",target:"_blank",rel:"noopener noreferrer"},K=i("SSDT-RTC0-RANGE.dsl"),Q=a("p",null,[i("By default, this uses "),a("code",null,"PC00.LPC0.RTC"),i(" for the pathing. you'll want to rename accordingly.")],-1),U=a("p",null,[i("Following the example from above, we'll be renaming it to "),a("code",null,"PCI0.LPC0.RTC"),i(":")],-1),X=a("p",null,[a("strong",null,"Before"),i(":")],-1),$=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"External (_SB_.PC00.LPC0, DeviceObj) <- Rename this\n\nExternal (_SB_.PC00.LPC0.RTC_, DeviceObj) <- Rename this\n\nScope (_SB.PC00.LPC0) <- Rename this\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br")])],-1),ee=a("p",null,[a("img",{src:"/assets/ssdt-before-rename-hedt.38e5c4d4.png",alt:""})],-1),ne=a("p",null,"Following the example pathing we found, the SSDT should look something like this:",-1),le=a("p",null,[a("strong",null,"After"),i(":")],-1),ae=a("div",{class:"language-text ext-text line-numbers-mode"},[a("pre",{class:"language-text"},[a("code",null,"External (_SB_.PCI0.LPC0, DeviceObj) <- Renamed\n\nScope (_SB.PCI0.LPC0.RTC) <- Renamed\n\nScope (_SB.PCI0.LPC0) <- Renamed\n\n\n  /* <- Remove if your RTC device didn't have an _STA\n  Scope (RTC)\n        {\n            Method (_STA, 0, NotSerialized)  // _STA: Status\n            {\n                If (_OSI (\"Darwin\"))\n                {\n                    Return (Zero)\n                }\n                Else\n                {\n                    Return (0x0F)\n                }\n            }\n        }\n  */ <- Remove if your RTC device didn't have an _STA\n")]),a("div",{class:"line-numbers"},[a("span",{class:"line-number"},"1"),a("br"),a("span",{class:"line-number"},"2"),a("br"),a("span",{class:"line-number"},"3"),a("br"),a("span",{class:"line-number"},"4"),a("br"),a("span",{class:"line-number"},"5"),a("br"),a("span",{class:"line-number"},"6"),a("br"),a("span",{class:"line-number"},"7"),a("br"),a("span",{class:"line-number"},"8"),a("br"),a("span",{class:"line-number"},"9"),a("br"),a("span",{class:"line-number"},"10"),a("br"),a("span",{class:"line-number"},"11"),a("br"),a("span",{class:"line-number"},"12"),a("br"),a("span",{class:"line-number"},"13"),a("br"),a("span",{class:"line-number"},"14"),a("br"),a("span",{class:"line-number"},"15"),a("br"),a("span",{class:"line-number"},"16"),a("br"),a("span",{class:"line-number"},"17"),a("br"),a("span",{class:"line-number"},"18"),a("br"),a("span",{class:"line-number"},"19"),a("br"),a("span",{class:"line-number"},"20"),a("br"),a("span",{class:"line-number"},"21"),a("br"),a("span",{class:"line-number"},"22"),a("br"),a("span",{class:"line-number"},"23"),a("br")])],-1),te=a("p",null,[a("img",{src:"/assets/ssdt-after-rename-hedt.5efbe3f6.png",alt:""})],-1),se=a("h3",{id:"compiling-the-ssdt",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#compiling-the-ssdt","aria-hidden":"true"},"#"),i(" Compiling the SSDT")],-1),ie=i("With the SSDT done, you're now "),re=i("ready to compile the SSDT!"),oe=a("h2",{id:"wrapping-up",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#wrapping-up","aria-hidden":"true"},"#"),i(" Wrapping up")],-1),ue=a("p",null,"Once you're done making your SSDT, either head to the next page to finish the rest of the SSDTs or head here if you're ready to wrap up:",-1),de=a("strong",null,"Cleanup",-1);u.render=function(i,r){const o=e("RouterLink"),u=e("OutboundLink");return n(),l(s,null,[d,a("nav",h,[a("ul",null,[a("li",null,[a(o,{to:"#seeing-if-you-need-ssdt-rtc0-range"},{default:t((()=>[c])),_:1})]),a("li",null,[a(o,{to:"#finding-the-acpi-path"},{default:t((()=>[p])),_:1})]),a("li",null,[a(o,{to:"#edits-to-the-sample-ssdt"},{default:t((()=>[m])),_:1}),a("ul",null,[a("li",null,[a(o,{to:"#compiling-the-ssdt"},{default:t((()=>[g])),_:1})])])]),a("li",null,[a(o,{to:"#wrapping-up"},{default:t((()=>[b])),_:1})])])]),f,a("p",null,[S,a(o,{to:"/dump.html"},{default:t((()=>[C])),_:1}),x,a(o,{to:"/compile.html"},{default:t((()=>[T])),_:1}),y,a("a",P,[w,a(u)]),D]),_,R,v,A,k,L,I,a("p",null,[N,a(o,{to:"/dump.html"},{default:t((()=>[B])),_:1}),F,a(o,{to:"/compile.html"},{default:t((()=>[E])),_:1}),O,a("a",j,[M,a(u)]),W]),G,V,q,z,H,Y,Z,a("ul",null,[a("li",null,[a("a",J,[K,a(u)])])]),Q,U,X,$,ee,ne,le,ae,te,se,a("p",null,[ie,a(o,{to:"/compile.html"},{default:t((()=>[re])),_:1})]),oe,ue,a("ul",null,[a("li",null,[a(o,{to:"/cleanup.html"},{default:t((()=>[de])),_:1})])])],64)};export default u;
